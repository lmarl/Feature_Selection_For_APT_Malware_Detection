##################################
# IMPORTS
##################################
import numpy as np
from numpy import *
import pandas as pd
from time import time
import matplotlib.pyplot as plt
from mpl_toolkits.mplot3d import Axes3D
from matplotlib.ticker import NullFormatter
from sklearn import manifold
from sklearn.manifold import TSNE
from sklearn.feature_selection import VarianceThreshold
from sklearn.feature_selection import SelectKBest
from sklearn.feature_selection import chi2
from sklearn import datasets
from sklearn.ensemble import ExtraTreesClassifier
from sklearn.externals import joblib 
import sys
import numpy

##################################
# PREPARATIVOS
##################################

###Leemos el dataset
input_file="../datasets/reducido_a_1941_features_without_NaNs_y_19457_rows.csv"
#input_file="../datasets/csv_a_empezar_desde_cero_v2_sin_cols21y37_con52_y_49_46_y43_40_34_31_28_24_17_14_10_final_con_cabecera_quitamos_5_muestras_develgroup_country_new_headers.csv"


df = pd.read_csv(input_file, header = 0, sep=';', dtype={"MD5":object,"FIRST_SEEN":object,"SIZE":int,"NUM_PACKERS":float64,"PACKERS_BIN":float64,"PACKERS_BIN_DIST":float64,"MALWARE_TYPE":object,"NUM_IMPORTS":float64,"IMPORTS_BIN":float64,"IMPORTS_BINARY_DIST":float64,"HAS_OVERLAYS":int,"SUSPICIOUS_DLLS":float64,"SUSPICIOUS_DLLS_DIST":float64,"ANTIDEBUG_BINARY":float64,"ANTIDEBUG_BINARY_DIST":float64,"NUM_LANG":float64,"LANG_BINARY":float64,"LANG_BINARY_DIST":float64,"API_BINARY":float64,"API_BINARY_DIST":float64,"RESOURCE_NUM":int,"SERVICES_BINARY":float64,"SERVICES_BINARY_DIST":float64,"all_files_binary":float64,"all_files_binary_DIST":float64,"all_opened_files_binary":float64,"all_opened_files_binary_DIST":float64,"all_written_files_binary":float64,"all_written_files_binary_DIST":float64,"all_deleted_files_binary":float64,"all_deleted_files_binary_DIST":float64,"all_read_files_binary":float64,"all_read_files_binary_DIST":float64,"UDP_Countries":float64,"UDP_Countries_DIST":float64,"TCP_countries":float64,"TCP_countries_DIST":float64,"DNS_countries":float64,"DNS_countries_DIST":float64,"SSDEEP":int,"IMPHASH":int,"APT":int,"NUM_APT":int})


###Separamos los campos que no nos interesan y campos objetivo
#malwaretypes=df.MALWARE_TYPE
isapt=df.APT
numapt=df.NUM_APT

###CREATEMUTEX
total=df.IMPORTS_BIN_CreateMutex[isapt==1].shape
suma= sum(df.IMPORTS_BIN_CreateMutex[isapt==1])
print suma
print total[0]
#print ("En APTs, el campo CreateMutex aparece en "+suma+" ocasiones de un total de "+total[0])

total2=df.IMPORTS_BIN_CreateMutex[isapt==0].shape
suma2=sum(df.IMPORTS_BIN_CreateMutex[isapt==0])
print suma2
print total2[0]
#print ("En NO APTs, el campo CreateMutex aparece en "+suma2+" ocasiones de un total de "+total[0])

print "=============="
###NUM_IMPORTS
total=df.NUM_IMPORTS[isapt==1].shape
suma= sum(df.NUM_IMPORTS[isapt==1])
print suma
print total[0]
print suma/total[0]
#print ("En APTs, el campo CreateMutex aparece en "+suma+" ocasiones de un total de "+total[0])

total2=df.NUM_IMPORTS[isapt==0].shape
suma2=sum(df.NUM_IMPORTS[isapt==0])
print suma2
print total2[0]
print suma2/total2[0]

print "=============="
###HAS_OVERLAYS
total=df.HAS_OVERLAYS[isapt==1].shape
suma= sum(df.HAS_OVERLAYS[isapt==1])
print suma
print total[0]
print 1.0*suma/total[0]
#print ("En APTs, el campo CreateMutex aparece en "+suma+" ocasiones de un total de "+total[0])

total2=df.HAS_OVERLAYS[isapt==0].shape
suma2=sum(df.HAS_OVERLAYS[isapt==0])
print suma2
print total2[0]
print 1.0*suma2/total2[0]

print "=============="
###GDI32.DLL
df2=df[isapt==1]
total=df2["SUSP_DLLS_GDI32.DLL"].shape
suma= sum(df2["SUSP_DLLS_GDI32.DLL"])
print suma
print total[0]
print 1.0*suma/total[0]
#print ("En APTs, el campo CreateMutex aparece en "+suma+" ocasiones de un total de "+total[0])

df3=df[isapt==0]
total2=df3["SUSP_DLLS_GDI32.DLL"].shape
suma2=sum(df3["SUSP_DLLS_GDI32.DLL"])
print suma2
print total2[0]
print 1.0*suma2/total2[0]

print "=============="
###ADVAPI32.DLL
df2=df[isapt==1]
total=df2["SUSP_DLLS_ADVAPI32.dll"].shape
suma= sum(df2["SUSP_DLLS_ADVAPI32.dll"])
print suma
print total[0]
print 1.0*suma/total[0]
#print ("En APTs, el campo CreateMutex aparece en "+suma+" ocasiones de un total de "+total[0])

df3=df[isapt==0]
total2=df3["SUSP_DLLS_ADVAPI32.dll"].shape
suma2=sum(df3["SUSP_DLLS_ADVAPI32.dll"])
print suma2
print total2[0]
print 1.0*suma2/total2[0]

