import numpy as np
from numpy import *
import pandas as pd
from time import time
import matplotlib.pyplot as plt
from mpl_toolkits.mplot3d import Axes3D
from matplotlib.ticker import NullFormatter
from pandas.plotting import scatter_matrix
from sklearn import manifold


input_file = "../datasets/csv_con_puntos_y_con_num_APTs_final_final_conptoycoma.csv"

df = pd.read_csv(input_file, header = 0, sep=';', dtype={"MD5":object,"FIRST_SEEN":object,"SIZE":int,"NUM_PACKERS":float64,"PACKERS_BIN":float64,"PACKERS_BIN_DIST":float64,"MALWARE_TYPE":object,"NUM_IMPORTS":float64,"IMPORTS_BIN":float64,"IMPORTS_BINARY_DIST":float64,"HAS_OVERLAYS":int,"SUSPICIOUS_DLLS":float64,"SUSPICIOUS_DLLS_DIST":float64,"ANTIDEBUG_BINARY":float64,"ANTIDEBUG_BINARY_DIST":float64,"NUM_LANG":float64,"LANG_BINARY":float64,"LANG_BINARY_DIST":float64,"API_BINARY":float64,"API_BINARY_DIST":float64,"RESOURCE_NUM":int,"SERVICES_BINARY":float64,"SERVICES_BINARY_DIST":float64,"all_files_binary":float64,"all_files_binary_DIST":float64,"all_opened_files_binary":float64,"all_opened_files_binary_DIST":float64,"all_written_files_binary":float64,"all_written_files_binary_DIST":float64,"all_deleted_files_binary":float64,"all_deleted_files_binary_DIST":float64,"all_read_files_binary":float64,"all_read_files_binary_DIST":float64,"UDP_Countries":float64,"UDP_Countries_DIST":float64,"TCP_countries":float64,"TCP_countries_DIST":float64,"DNS_countries":float64,"DNS_countries_DIST":float64,"SSDEEP":int,"IMPHASH":int,"APT":int,"NUM_APT":int})

malwaretypes=df.MALWARE_TYPE
ssdeeptypes=df.SSDEEP
imphashtypes=df.IMPHASH
apttypes=df.APT
numapt=df.NUM_APT

values=malwaretypes.values.astype(np.int64)
values2=apttypes.values.astype(np.int64)
values3=numapt.values.astype(np.int64)

del df['APT']
del df['MD5']
del df['FIRST_SEEN']
del df['SSDEEP']
del df['IMPHASH']
del df['NUM_APT']

#QUITAMOS LOS CAMPOS QUE TENIAN MAYOR CORRELACION
del df['IMPORTS_BINARY_DIST']
del df['all_opened_files_binary_DIST']
del df['all_read_files_binary_DIST']
del df['all_files_binary_DIST']
del df['SUSPICIOUS_DLLS_DIST']
del df['all_written_files_binary_DIST']
del df['all_deleted_files_binary_DIST']
del df['NUM_IMPORTS']
#del df['NUM_PACKERS']
del df['PACKERS_BIN_DIST']
del df['LANG_BINARY_DIST']
del df['API_BINARY_DIST']
del df['ANTIDEBUG_BINARY_DIST']
del df['SERVICES_BINARY_DIST']
del df['UDP_Countries_DIST']
del df['TCP_countries_DIST']
del df['DNS_countries_DIST']



###EXTRAEMOS LAS CABECERAS Y LOS VALORES DEL DATASET
atributos=list(df)
df3=df.values


###ESTANDARIZAMOS
from sklearn import preprocessing
df2 = preprocessing.scale(df)
df = pd.DataFrame(df2)

###...ASI COMO LAS CORRELACIONES ENTRE LOS CAMPOS
correlations=df.corr()

###CREAMOS UNA FIGURA CON UNA SOLA GRAFICA
fig = plt.figure(figsize=(16,16))
ax = fig.add_subplot(111)

###Y PINTAMOS EN ELLA LAS CORRELACIONES
cax = ax.matshow(correlations, vmin=-1, vmax=1)
fig.colorbar(cax)

ticks = np.arange(0,21,1)
ax.set_xticks(ticks)
ax.set_yticks(ticks)
ax.set_xticklabels(atributos)
ax.set_yticklabels(atributos)

plt.xticks(rotation=80)

fig.savefig('resultados/correlation_heatmap.png')


plt.show()
